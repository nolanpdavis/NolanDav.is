{
  "_args": [
    [
      {
        "raw": "typed.js",
        "scope": null,
        "escapedName": "typed.js",
        "name": "typed.js",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/nolandavis/WebProjects/NolanDav.is"
    ]
  ],
  "_from": "typed.js@latest",
  "_id": "typed.js@2.0.6",
  "_inCache": true,
  "_location": "/typed.js",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/typed.js-2.0.6.tgz_1506226532455_0.07809599139727652"
  },
  "_npmUser": {
    "name": "mattboldt",
    "email": "me@mattboldt.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "typed.js",
    "scope": null,
    "escapedName": "typed.js",
    "name": "typed.js",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/typed.js/-/typed.js-2.0.6.tgz",
  "_shasum": "4e270f6fbc5e5e94a6c38fa29407c404745a7d61",
  "_shrinkwrap": null,
  "_spec": "typed.js",
  "_where": "/Users/nolandavis/WebProjects/NolanDav.is",
  "author": {
    "name": "Matt Boldt",
    "email": "me@mattboldt.com"
  },
  "bugs": {
    "url": "https://github.com/mattboldt/typed.js/issues"
  },
  "dependencies": {},
  "description": "A JavaScript Typing Animation Library",
  "devDependencies": {
    "babel": "^5.8.23",
    "babel-core": "^5.8.24",
    "babel-eslint": "^4.1.1",
    "babel-loader": "^5.3.2",
    "documentation": "^4.0.0-rc.1",
    "eslint": "^3.19.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.6.0",
    "eslint-plugin-node": "^5.1.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1",
    "express": "^4.15.3",
    "gulp": "^3.9.0",
    "gulp-documentation": "^3.2.0",
    "gulp-eslint": "^4.0.0",
    "gulp-express": "^0.3.5",
    "gulp-livereload": "^3.8.1",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.5.2",
    "gulp-uglify": "^1.4.1",
    "webpack": "^1.12.1",
    "webpack-stream": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-aGmMVR/J3fD4Dm3WWs1xb44ts47oQnYVgm2RF4BTMDdMpQIru0Jqa/lOkEzcS6eQWucA0lQl08rHgmNdvXkycQ==",
    "shasum": "4e270f6fbc5e5e94a6c38fa29407c404745a7d61",
    "tarball": "https://registry.npmjs.org/typed.js/-/typed.js-2.0.6.tgz"
  },
  "gitHead": "7aa30dd34270ccc4c18d33752c880fb25cd3bee4",
  "homepage": "https://github.com/mattboldt/typed.js",
  "keywords": [
    "typed",
    "animation"
  ],
  "license": "MIT",
  "main": "lib/typed.js",
  "maintainers": [
    {
      "name": "mattboldt",
      "email": "me@mattboldt.com"
    }
  ],
  "name": "typed.js",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/mattboldt/typed.js.svg?branch=typed-2.0)](https://travis-ci.org/mattboldt/typed.js)\n[![Code Climate](https://codeclimate.com/github/mattboldt/typed.js/badges/gpa.svg)](https://codeclimate.com/github/mattboldt/typed.js)\n[![GitHub release](https://img.shields.io/github/release/mattboldt/typed.js.svg)]()\n[![npm](https://img.shields.io/npm/dt/typed.js.svg)](https://img.shields.io/npm/dt/typed.js.svg)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n[![Gratipay User](https://img.shields.io/gratipay/user/mattboldt.svg)](https://gratipay.com/Typed.js/)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/mattboldt/typed.js/master/LICENSE.txt)\n\n<img src=\"https://raw.githubusercontent.com/mattboldt/typed.js/master/logo-cropped.png\" width=\"450px\" title=\"Typed.js\" />\n\n### [View the Live Demo](http://www.mattboldt.com/demos/typed-js/) | [View All Demos](http://www.mattboldt.com/typed.js) | [View Full Docs](http://www.mattboldt.com/typed.js/docs) | [mattboldt.com](http://www.mattboldt.com)\n\nTyped.js is a library that types. Enter in any string, and watch it type at the speed you've set, backspace what it's typed, and begin a new sentence for however many strings you've set.\n\n---\n\nInstallation\n------------\n\n#### NPM\n\n~~~\nnpm install typed.js\n~~~\n\n#### Yarn\n\n~~~\nyarn add typed.js\n~~~\n\n#### Bower\n\n~~~\nbower install typed.js\n~~~\n\n#### Setup\n\nThis is really all you need to get going.\n\n~~~ javascript\n// Can also be included with a regular script tag\nimport Typed from 'typed.js';\n\nvar options = {\n  strings: [\"<i>First</i> sentence.\", \"&amp; a second sentence.\"],\n  typeSpeed: 40\n}\n\nvar typed = new Typed(\".element\", options);\n~~~\n\nWonderful sites using Typed.js\n---\nhttps://slack.com/\n\nhttps://envato.com/\n\nhttps://productmap.co/\n\nhttps://www.typed.com/\n\nhttps://apeiron.io\n\nhttps://git.market/\n\nhttp://allison.house/404\n\nhttp://www.maxcdn.com/\n\nhttps://commando.io/\n\nhttp://testdouble.com/agency.html\n\nhttp://www.stephanemartinw.com/\n\nhttp://www.trelab.fi/en/\n\nhttp://jessejohnson.github.io/\n\n\n---\n\n### Strings from static HTML (SEO Friendly)\nRather than using the `strings` array to insert strings, you can place an HTML `div` on the page and read from it.\nThis allows bots and search engines, as well as users with JavaScript disabled, to see your text on the page.\n\n~~~ javascript\n<script>\n  var typed = new Typed('.element', {\n    stringsElement: '#typed-strings'\n  });\n</script>\n~~~\n\n~~~ html\n<div id=\"typed-strings\">\n    <p>Typed.js is a <strong>JavaScript</strong> library.</p>\n    <p>It <em>types</em> out sentences.</p>\n</div>\n<span id=\"typed\"></span>\n~~~\n\n### Type Pausing\n\nYou can pause in the middle of a string for a given amount of time by including an escape character.\n\n~~~ javascript\nvar typed = new Typed(\".element\", {\n  // Waits 1000ms after typing \"First\"\n  strings: [\"First ^1000 sentence.\", \"Second sentence.\"]\n});\n~~~\n\n### Smart Backspacing\n\nIn the following example, this would only backspace the words after \"This is a\"\n\n~~~ javascript\nvar typed = new Typed(\".element\", {\n  strings: [\"This is a JavaScript library\", \"This is an ES6 module\"],\n  smartBackspace: true // Default value\n});\n~~~\n\n### Bulk Typing\n\nThe following example would emulate how a terminal acts when typing a command and seeing its result. \n\n~~~ javascript\nvar typed = new Typed(\".element\", {\n  strings: [\n    \"git push --force ^1000\\n `pushed to origin with option force`\"\n  ]\n});\n~~~\n\n### CSS\n\nCSS animations are build upon initialzation in JavaScript. But, you can customize them at your will! These classes are:\n```css\n/* Cursor */\n.typed-cursor {}\n\n/* If fade out option is set */\n.typed-fade-out {}\n```\n\n### Use with ReactJS\n\nCheck out this example React app using Typed.js in a component: https://jsfiddle.net/mattboldt/ovat9jmp/\n\n\nCustomization\n----\n\n~~~ javascript\nvar typed = new Typed(\".element\", {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {}\n});\n~~~\n\n\n## Contributing\n\n### [View Contribution Guidelines](./.github/CONTRIBUTING.md)\n\nend\n---\n\nThanks for checking this out. If you have any questions, I'll be on [Twitter](http://www.twitter.com/atmattb).\n\nIf you're using this, let me know! I'd love to see it.\n\nIt would also be great if you mentioned me or my website somewhere. [www.mattboldt.com](http://www.mattboldt.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mattboldt/typed.js.git"
  },
  "version": "2.0.6"
}
