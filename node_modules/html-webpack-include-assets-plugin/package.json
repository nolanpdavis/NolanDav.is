{
  "_args": [
    [
      {
        "raw": "html-webpack-include-assets-plugin@0.0.7",
        "scope": null,
        "escapedName": "html-webpack-include-assets-plugin",
        "name": "html-webpack-include-assets-plugin",
        "rawSpec": "0.0.7",
        "spec": "0.0.7",
        "type": "version"
      },
      "/Users/nolandavis/WebProjects/NolanDav.is/node_modules/dynamic-cdn-webpack-plugin"
    ]
  ],
  "_from": "html-webpack-include-assets-plugin@0.0.7",
  "_id": "html-webpack-include-assets-plugin@0.0.7",
  "_inCache": true,
  "_location": "/html-webpack-include-assets-plugin",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/html-webpack-include-assets-plugin-0.0.7.tgz_1500325006353_0.9357715083751827"
  },
  "_npmUser": {
    "name": "jharris4",
    "email": "harris.jb@gmail.com"
  },
  "_npmVersion": "5.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "html-webpack-include-assets-plugin@0.0.7",
    "scope": null,
    "escapedName": "html-webpack-include-assets-plugin",
    "name": "html-webpack-include-assets-plugin",
    "rawSpec": "0.0.7",
    "spec": "0.0.7",
    "type": "version"
  },
  "_requiredBy": [
    "/dynamic-cdn-webpack-plugin"
  ],
  "_resolved": "https://registry.npmjs.org/html-webpack-include-assets-plugin/-/html-webpack-include-assets-plugin-0.0.7.tgz",
  "_shasum": "74552e41bb368931be5f609b563cde811d1e7a26",
  "_shrinkwrap": null,
  "_spec": "html-webpack-include-assets-plugin@0.0.7",
  "_where": "/Users/nolandavis/WebProjects/NolanDav.is/node_modules/dynamic-cdn-webpack-plugin",
  "author": {
    "name": "Jon Harris",
    "email": "harris.jb@gmail.com",
    "url": "https://github.com/jharris4"
  },
  "bugs": {
    "url": "https://github.com/jharris4/html-webpack-include-assets-plugin/issues"
  },
  "dependencies": {
    "minimatch": "^3.0.3"
  },
  "description": "Add the ability to include assets based on a list of paths",
  "devDependencies": {
    "cheerio": "^0.22.0",
    "css-loader": "^0.28.1",
    "extract-text-webpack-plugin": "^2.1.0",
    "html-webpack-plugin": "^2.28.0",
    "jasmine": "^2.6.0",
    "rimraf": "^2.5.4",
    "semistandard": "^11.0.0",
    "style-loader": "^0.17.0",
    "webpack": "^2.5.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-sJELZyP9T+yNQvnXiKHzkuDgXH+8tzBudHXtvPv5NbcEJYBJFEX8b2SURPNoDCU7b0zCV0yNCHRRgrpH6DUezw==",
    "shasum": "74552e41bb368931be5f609b563cde811d1e7a26",
    "tarball": "https://registry.npmjs.org/html-webpack-include-assets-plugin/-/html-webpack-include-assets-plugin-0.0.7.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "af30cd3667679c50210b2d2aeed45a681dc49f79",
  "homepage": "https://github.com/jharris4/html-webpack-include-assets-plugin",
  "keywords": [
    "webpack",
    "plugin",
    "html-webpack-plugin",
    "include",
    "assets"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jharris4",
      "email": "harris.jb@gmail.com"
    }
  ],
  "name": "html-webpack-include-assets-plugin",
  "optionalDependencies": {},
  "readme": "Include Assets extension for the HTML Webpack Plugin\n========================================\n[![npm version](https://badge.fury.io/js/html-webpack-include-assets-plugin.svg)](https://badge.fury.io/js/html-webpack-include-assets-plugin) [![Build Status](https://travis-ci.org/jharris4/html-webpack-include-assets-plugin.svg?branch=master)](https://travis-ci.org/jharris4/html-webpack-include-assets-plugin) [![js-semistandard-style](https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg?style=flat-square)](https://github.com/Flet/semistandard)\n\nEnhances [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin)\nfunctionality by allowing you to specify js or css assets to be included.\n\nWhen using a plugin such as [copy-webpack-plugin](https://github.com/kevlened/copy-webpack-plugin) you may have assets output to your build directory that are not detected/output by the html-webpack-plugin.\n\nThis plugin allows you to force some of these assets to be included in the output from html-webpack-plugin.\n\nInstallation\n------------\nYou must be running webpack on node 4.x or higher\n\nInstall the plugin with npm:\n```shell\n$ npm install --save-dev html-webpack-include-assets-plugin\n```\n\n\nBasic Usage\n-----------\nRequire the plugin in your webpack config:\n\n```javascript\nvar HtmlWebpackIncludeAssetsPlugin = require('html-webpack-include-assets-plugin');\n```\n\nAdd the plugin to your webpack config as follows:\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({ assets: [], append: true })\n]  \n```\n\nOptions\n-------\nThe available options are:\n\n- `jsExtensions`: `string` or `array`\n\n  Specifies the file extensions to use to determine if assets are script assets. Default is `['.js']`.\n\n- `cssExtensions`: `string` or `array`\n\n  Specifies the file extensions to use to determine if assets are style assets. Default is `['.css']`.\n\n- `assets`: `string` or `array` or `object`\n\n  Assets that will be output into your html-webpack-plugin template.\n\n  To specify just one asset, simply pass a string or object. To specify multiple, pass an array of strings or objects.\n\n  If the asset path ends in one of the `jsExtensions` or `cssExtensions` values, simply use a string value.\n\n  If the asset does not have a valid extension, you can instead pass an object with properties `path` and `type`, where `path` is the asset href/src and `type` is one of `js` or `css`.\n\n- `append`: `boolean`\n\n  Specifying whether the assets should be prepended (`false`) before any existing assets, or appended (`true`) after them.\n\n- `publicPath`: `boolean` or `string`\n\n  Specifying whether the assets should be prepended with webpack's public path or a custom publicPath (`string`).\n\n  A value of `false` may be used to disable prefixing with webpack's publicPath, or a value like `myPublicPath/` may be used to prefix all assets with the given string. Default is `true`.\n\n- `hash`: `boolean`\n\n  Specifying whether the assets should be appended with webpack's compilation hash. This is useful for cache busting. Default is `false`.\n\n- `files`: `string` or `array`\n\n  Files that the assets will be added to.\n\n  By default the assets will be included in all files. If files are defined, the assets will only be included in specified file globs.\n\nExample\n-------\nUsing `HtmlWebpackIncludeAssetsPlugin` and `CopyWebpackPlugin` to include assets to `html-webpack-plugin` template :\n\n```javascript\nplugins: [\n  new CopyWebpackPlugin([\n    { from: 'node_modules/bootstrap/dist/css', to: 'css/'},\n    { from: 'node_modules/bootstrap/dist/fonts', to: 'fonts/'}\n  ]),\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: ['css/bootstrap.min.css', 'css/bootstrap-theme.min.css'],\n    append: false\n  })\n]  \n```\n\nAppending and prepending at the same time :\n\n```javascript\nplugins: [\n  new CopyWebpackPlugin([\n    { from: 'node_modules/bootstrap/dist/css', to: 'css/'},\n    { from: 'node_modules/bootstrap/dist/fonts', to: 'fonts/'}\n  ]),\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: ['css/bootstrap.min.css', 'css/bootstrap-theme.min.css'],\n    append: false\n  }),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: ['css/custom.css'],\n    append: true\n  })\n]\n```\n\nUsing custom `jsExtensions` :\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: ['dist/output.js', 'lib/content.jsx'],\n    append: false,\n    jsExtensions: ['.js', '.jsx']\n  })\n]\n```\n\nUsing custom `publicPath` :\n\n```javascript\nplugins: [\n  new CopyWebpackPlugin([\n    { from: 'node_modules/bootstrap/dist/css', to: 'css/'},\n    { from: 'node_modules/bootstrap/dist/fonts', to: 'fonts/'}\n  ]),\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: ['css/bootstrap.min.css', 'css/bootstrap-theme.min.css'],\n    append: false,\n    publicPath: 'myPublicPath/'\n  })\n]\n```\n\nManually specifying asset types :\n\n```javascript\nplugins: [\n  new CopyWebpackPlugin([\n    { from: 'node_modules/bootstrap/dist/css', to: 'css/'},\n    { from: 'node_modules/bootstrap/dist/fonts', to: 'fonts/'}\n  ]),\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: [\n      '/css/bootstrap.min.css',\n      '/css/bootstrap-theme.min.css',\n      { path: 'https://fonts.googleapis.com/css?family=Material+Icons', type: 'css' }\n    ],\n    append: false,\n    publicPath: ''\n  })\n]\n```\n\nUsing `hash` option :\n\n```javascript\nplugins: [\n  new CopyWebpackPlugin([\n    { from: 'node_modules/bootstrap/dist/css', to: 'css/'},\n    { from: 'node_modules/bootstrap/dist/fonts', to: 'fonts/'}\n  ]),\n  new HtmlWebpackPlugin(),\n  new HtmlWebpackIncludeAssetsPlugin({\n    assets: ['css/bootstrap.min.css', 'css/bootstrap-theme.min.css'],\n    append: false,\n    hash: true\n  })\n]\n```\n\nSpecifying specific `files`\n\n```javascript\nplugins: [\n  new CopyWebpackPlugin([\n    { from: 'node_modules/bootstrap/dist/css', to: 'css/'},\n    { from: 'node_modules/bootstrap/dist/fonts', to: 'fonts/'}\n  ]),\n  new HtmlWebpackPlugin({\n    filename: 'a/index.html'\n  }),\n  new HtmlWebpackPlugin({\n    filename: 'b/index.html'\n  }),\n  new HtmlWebpackIncludeAssetsPlugin({\n    files: ['a/**/*.html'],\n    assets: ['css/a.css'],\n    append: true\n  }),\n  new HtmlWebpackIncludeAssetsPlugin({\n    files: ['b/**/*.html'],\n    assets: ['css/b.css'],\n    append: true\n  })\n]\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jharris4/html-webpack-include-assets-plugin.git"
  },
  "scripts": {
    "debug": "node-debug jasmine",
    "prepublish": "npm run test",
    "pretest": "semistandard",
    "test": "jasmine"
  },
  "version": "0.0.7"
}
